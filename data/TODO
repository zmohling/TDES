### TO-DO: TDES ###
 - Mode of Operation (confidentiality and authenticity)
    - Message authentication code?
    - Initialization vector
    - Chaining / Feedback
 - Metadata insertion (authentication & integrity data, algorithm used, 
    mode of operation, version) 
 - Rid magic numbers with preprocessor defines.
 - CLI option to overwrite original file if successful
 - CLI option to encrypt directorys recursively
 - Integrated Validation Tool
    - Compare ciphertext to NIST test vectors
    - Ensure semantic security
    - Checksum validation 
 - Integrated Benchmarking Tool
    - Log average throughput rate for wide sample of test files
    - Log throughput rate for files of different lengths to a table
    - Calculate a noramlized score (accounting for differing CPUs and Disks)
    - If previous benchmarks exist and version has changed, perform and log analysis.
 - Optimizations (may entail porting cipher to C)
 - Documentation with Doxygen
 - Building as a <popular *nix package manager> package.
 - Cross-platform compatible with Windows and OSX

### DONE ###
 - Fix 64 bit truncation at EOF
 - Full TDES implementation DES -> TDES
 - Multithreading for parallel encryption/decryption
 - Lower memory cost: read and write x number of bytes at a time
